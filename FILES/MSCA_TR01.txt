1. Excellence 
1.1	Quality and pertinence of the project’s research and innovation objectives (and the extent to which they are ambitious, and go beyond the state of the art)

Introduction— This project focuses on fault-resilient coordination in multi-robot systems (MRSs), emphasizing scalable and distributed control architectures inspired by principles of swarm robotics.  While MRSs offer significant advantages in scalability, flexibility, and redundancy, their deployment in real-world environments introduces critical challenges. These include sensor and actuator faults, loss of local autonomy, communication delays or dropouts, and uncertain and dynamic environments. Such challenges can severely degrade the overall system performance, jeopardize mission objectives, and compromise safety.
A multi-agent robot system (MARS) is one of the most important topics nowadays. The basic task of this system is based on distributive and cooperative work among agents (robots). It combines two important systems; multi-agent system (MAS) and multi-robots system (MRS).
To address these issues, the project proposes a unified control and monitoring framework that integrates visual perception, adaptive and learning-based control, fault diagnosis, and formal safety guarantees, aiming to enable the safe, reliable, and autonomous operation of large-scale robot teams under faults and uncertainties.
To achieve this, Dr. Hamed Tirandaz will conduct the research at Sabancı University, Türkiye, under the supervision of Prof. Mustafa Unel.
State-of-the-art  
Recent advances span each of the project’s work packages. Below we summarize key developments in each area, focusing on the recent achievements:
•	WP1 (Hybrid Dynamics Modeling & Parameter Identification)
In spite of all the progress made in collective robotics in the last years, a lot of work remains to be done both in describing and understanding the behavior of multi-robot systems without regard to their internal mechanisms. However, theoretical descriptions of the dynamics of multi-robot systems pose a considerable challenge to robot designers because they do not rely on well-established and quantitative laws of behavior. As a matter of fact, collective robotics suffers from a lack of descriptive and analytical tools for estimating the tendencies and evolution of the dynamics of multi-robot systems under a variety of conditions.\
Some efforts have been made towards the theoretical understanding of multi-robot systems, such as the introduction of metrics for measuring specific aspects of multi-robot systems, e.g. diversity (Balch, 2000) and fluctuations from a steady state (Lerman et al., 2006), as well as attempts to describe the dynamics of multi-robot systems by using formal and semi-formal methodologies, e.g. ergodic dynamics (Shell et al., 2005).
By the dynamics of a multi-robot system we mean the set of influencing factors that produce the system’s activity. This in turn is relevant because its association with systems change. Note that the dynamics of the system may be useful for its understanding and characterization. The dynamics of a multi-robot system should represent the activity of the members of the system, in terms of the evolution of their behavior and interactions over time, as a whole.
In [Munoz2011], the representation of the dynamics is classified by four categoriez: (i) by the nature of the task and (ii) by the system’s behavior, (iii) the states of the system, (iv) mechanical statistics metrics. 
Multi-robot and swarm-robot systems often rely on macro-level paradigms such as density evolution (Motsch & Tadmor, 2014), continuum approximations via PDEs modeling swarm flow (Topaz & Bertozzi, 2004), and kinematic emulators that treat agents as simple point-masses or unicycles for formation control (Oh et al., 2015; Leonard et al., 2007). However, these frameworks tend to ignore individual agent dynamics and local interaction rules. To address this gap, WP1 focuses on agent-level abstractions and interaction-law inference. First, Roehrl et al. (2020) introduced PINODE, embedding Lagrangian motion equations within neural ODEs to produce data-efficient, physically grounded per-agent models [4]. Agand & Shoorehdeli (2022) developed a Lyapunov-based adaptive neural scheme ensuring Uniform Ultimate Boundedness (UUB) for real-time uncertainty estimation [5]. Furthermore, Grover’s 2023 CMU thesis presents a method for inferring latent agent dynamics and coupling weights from observed trajectories [6]. Techniques like sparse identification (SINDy) (Brunton et al., 2016) and graph neural networks (GNNs) (Kipf & Welling, 2017) further support scalable modeling of interaction laws in dynamic MARSs.
Motivated by this review, WP1 will:
•	Develop lightweight, structured agent-level models (e.g., point-mass or unicycle) enhanced with vision-based neural residuals,
•	Infer interaction rules such as consensus weights or formation coupling via SINDy or GNNs applied to trajectory data,
•	Integrate agent and interaction models into a unified, modular framework,
•	Validate the approach through simulation and hardware testbeds, demonstrating data efficiency and scalability.

Multi-robot system modeling has traditionally focused on simple agent abstractions and interaction laws to explain emergent collective behavior, but recent advances combine physics-informed agent-level dynamics with data-driven identification. PINODE by Roehrl et al. (2020) [WP1_02] embeds Lagrangian motion equations into neural ODEs, producing physically plausible and data-efficient models ideal for per-agent identification in MRSs. Agand & Shoorehdeli (2022) [WP1_03] complement this by using parallel neural networks with Lyapunov-based updates to ensure real-time uncertainty estimation with UUB stability, demonstrating robust online adaptation in networked teams. Meanwhile, recent work from Grover (2023) [WP1_04] at CMU on system identification of multi-agent systems shows how interaction constraints and latent dynamics can be inferred from collective motion, allowing an external observer to learn both individual dynamics and emergent coordination rules. These approaches—agent-level hybrid modeling, interaction law inference, and emergent-behavior learning—highlight the gap that WP1 addresses: creating a structured, vision-enhanced identification framework that captures per-agent behavior, inter-agent coupling, and collective dynamics in a unified, scalable manner.

dynamic model of individual agents of a multiagent system
In recent years, significant progress has been made in combining physics-based dynamic models with data-driven approaches to achieve accurate, data-efficient, and physically consistent system identification—an essential foundation for robust control in multi-robot systems. 
Hybrid modeling enables real-time adaptability to environmental changes through online learning of uncertainties.
In [WP1_01], the authors present a framework for the incorporation of a priori physics-based knowledge into neural network models of dynamical systems, where the physics-informed constraints are enforced via the augmented Lagrangian method during the model’s training. They had shown experimentally that the inclusion of increasingly detailed forms of side-information leads to increasingly accurate model predictions.
Roehrl et al. (2020) in [WP1_02] introduce PINODE—a physics-informed neural ODE that embeds the Lagrangian equations of motion into a neural network to model dynamics accurately and data-efficiently while preserving physical plausibility.
Agand & Shoorehdeli (2022), in [WP1_03], propose an adaptive learning architecture using three parallel neural networks updated via Lyapunov-based rules that guarantee uniform ultimate boundedness (UUB). Validated on a 3‑DOF haptic system, their method enables real‑time uncertainty estimation with formal stability, making it highly suitable for online adaptation in distributed multi‑robot teams.
Data-driven learning of the uncertainty can lead to more effective tracking control policies with better adaptivity and less conservatism, e.g., [] [WP1]
Motivated by the above researches, the application of hybrid modeling frameworks for MRSs is underexplored where individual agent models must be scalable, distributed, and able to incorporate vision-based feedback for improved identification (e.g., pose, contact dynamics).
WP1 extends hybrid modeling by combining structured physics-based dynamics with online learning of residuals using vision-derived observations, all within a multi-robot context. This innovation bridges a key gap in the literature, applying single-robot hybrid models to distributed robotic teams under uncertainty.
The decentralized configuring and deploying of multi-robot networks of, mobile robots with considering wireless sensor network, is investigated in [Smith2009]. Furthermore, in their work, the feasibility of the user-defined network tasks for the network, considering the limited range of its sensors is studied, necessary and sufficient conditions are presented.
Over the past few years, decentralization of multi-agent robotic systems has become an important research area.
•	WP2 (Multi-Robot Distributed Safety-Critical Control)
A natural approach to accomplish a multi-robot task is by decomposing it into cooperative actions, each one executed by a group of the robots where every robot takes a well defined role. To have an intentional cooperation level working with a Multi-Robot System (MRS), explicit mechanisms and control architectures have to be defined. In order to analyse or design a multi-robot system, it can b viewed as a Multi-Agent System (MAS) composed of physical agents.
Although agents in MASs can have pre-designed behaviors, complex environments often make it difficult or even impossible to develop appropriate agent behaviors in advance.
Due to the limited sensor and communication abilities of the robots, the sensor network is implemented as a decentralized system. 
Decentralized strategies have also received much attention [Jadbabaie2003, Lin2004]. Such control strategies are often described as employing nearest neighbor rules to achieve their global objectives. These nearest neighbor rules define the control laws for each agent based on their nearest neighbors.
Multi-agent robotic systems use centralized, decentralized, or distributed control architectures [Soumya2020, Jimenez2018]. Centralized control provides global coordination but is computationally heavy and failure-prone. Decentralized control enables local decision-making without inter-controller communication, improving scalability. Distributed control allows agent cooperation through communication or environmental cues, supporting autonomy in complex tasks.
There are two strategies in the literature devoted to the control of a multi robot team challenge:  Centralized and decentralized [Alwafi2022, Stare2012]. In centralized way, there is an agent or leader (a specific robot) that is in accountable of organizing the act of the other robots; the leader is in charge for the decisional operation with the participation of the entire team, while other members work according to directions given by the leader [Verma2021]. Centralized strategy is ineffectual with large number of robots due to the high computation requirement of the leader, the communication cost between the robots, and is non-robust to communication failure [Yan2013]. Furthermore, centralized control strategies typically require global network information to implement, may be unavailable or difficult to obtain, especially considering the sensor limitations of the network, see for instance [Smith2009]. 
Furno et al. [Furno2015] compare centralized and decentralized control in a multi-agent underwater robotic system, highlighting trade-offs between faster error correction in centralized setups and greater fault tolerance and communication efficiency in decentralized ones, despite both requiring constant inter-agent communication.
 In a multi-robot system, it is possible to allow more than one member to acquire the role of a leader during the mission [Stare2012]. 
By contrast, decentralized control strategies consist of robotic agents that are completely independent in the process of adopting decisions, where each robot is an autonomous unit that operates according to its position in the team without a leader. Besides that, the decision-making is done with the participation of all members [Alwafi2022, Stare2012].
The decentralized strategy is extremely robust, and it can perform very well in complex and hazardous environments [Stare2012].
In [Lin2004], nearest neighbor rules are employed in their designed control laws for each agent. In [Reynolds1987], methods are presented for simulating the behavior of flocks of “boids,” where the control for each “boid” is determined by the spatial relationship between each of its “nearby flockmates.” 
 
•	WP3 (Safety Layer with Graph based Control Barrier Functions)
As previously mentioned, decentralized control strategies implemented with multi-agent networks frequently feature robots using nearest neighbor rules, in which each agent has specific relationships with a proper subset of other agents. Therefore, it is often convenient to use graphs to represent these networks. Specifically, graphs are used to represent the topology of the control laws, as well as the information available to each agent. Graph-based modeling of decentralized control strategies has received much recent attention [Lin2004, Cortes2006, Ji2007].
Future generation autonomous agents are expected to operate in remote and dangerous places like outer space, undersea, hazardous waste sites, and are therefore anticipated to be far more self-directed than today's existing agents. The ability of an agent to plan its own motion is pivotal to its autonomy.
The paper [Jiménez2018] proposes a decentralized communication framework for multi-agent robots, using  Received Signal Strength Indicator (RSSI) and data history for adaptive information sharing. 
Control Barrier Functions (CBFs) ensure multi-robot safety by defining collision-free regions [Zengyi2020]. Centralized CBFs learn a single barrier and policy from global data but struggle with scalability and single-point failures. Distributed CBFs use centralized training and local execution—each robot applies a shared CBF using only its own and neighbors’ observations, enhancing fault tolerance.
With the increasing requests on the application of multi-robot system for complex tasks, the obstacle avoidance of multi-robot system becomes more and more crucial
When multiple moving robots share a common workspace, the motion planning task becomes even more difficult and cannot be performed for just one robot without considering others. In this kind of problems, while pursuing their individual (local) goals, robots must coordinate their motions with each other in order to avoid collisions with obstacles and one another, thus contributing to the task of achieving a global goal, which might be minimizing the total time or distance. This problem is called Multi Robot Motion Planning (MRMP) problem. In MRMP, each robot is regarded as a dynamic obstacle for other robots, and therefore the element of time plays a major role in planning, especially because of its irreversible nature (Latombe, 1991).

Space is the most limiting constraint in a typical MRMP problem: often, because of lack of sufficient space around moving robots, they cannot reach their destinations without
obstructing each other’s way, causing deadlocks. Deadlocks are situations in which two (or more) robots intercept each other’s motions and are prevented from reaching their goals. This happens generally in narrow passageways where autonomous moving robots cannot pass by each other. To resolve such a deadlock, one of the robots should leave and evacuate the passageway (by usually backtracking), and let the opposite robot move out of the passage. Two strategy taken in the literature to resolve deadlock are (i): Velocity Tuning, in which independent start-to-goal paths by considering reshuffling, circumnavigating, detouring, and speed regulating; and (ii) Prioritized Planning, in which the robots are sorted by their moving priorities (Bennewitz et al., 2001).

By reducing the workspace into a graph with vertices including the starts and goals of all robots, the MRMP problem can turn into a sequencing problem where the robots are
planned to move sequentially (or concurrently) toward their destinations, without colliding with each other. The graph structure stipulates them to remain on predefined routes (i.e. graph edges), and so avoid static obstacles existing in the workspace.
There are two main groups of CBF-based techniques in multi-agent control: model-based [Tan2021] and data-driven approaches [Ahmadi2019]. Model-based approaches require full knowledge of the environment and fix CBF parameters a-priori. The CBF constraints are affine in the control variable, to formulate a quadratic program (QP) controller, which provides safety guarantees for navigation. In contrast, data-driven approaches directly approximate CBFs with neural networks [Dawson2023]. However, these approaches sacrifice safety guarantees in the process.
Multi-robot system can be represented as a graph, where each robot can be considered as a vertex of the graph, and the communication structure between robots can be described as an edge of the graph [Kanjanawanishkul2010].
Graph search algorithms has to be considered to find the shortest path from the possible paths [Rashid2013]. The collision avoidance problem has been widely investigated for a multi-robot system in the literature and many different approaches have been used, with typical solutions relying on the possibility of avoiding collisions with obstacles and between robots [Falconi2015].
The collision avoidance among robots is gained through exploiting tools from the graph theory such as the properties of weighted graphs, edgeweight functions, the Laplacian-based algorithm used for graph connectivity to represent the link between the robots [Falconi2015]. Algebraic graph theory can be used to improve the formation control of a team of mobile robots. For instance, weighted graphs properties can be used to obtain a formation shape and avoid collision among robots moving in the environment [Yasuda2011].
The Adjacency and Laplacian matrices have been widely used in multi-robot system graphs [Smith2009, Fax2004]. For example, the work [Fax2004] pointed out that the eigenvalues of the Laplacian matrix could display the system’s stability with laws governing the closest neighbours. In [Zavlanos2007], the authors had shown that the controlling network problem of robots (agents) can be solved using an algebraic graph theory, where the condition connectivity is pointed out using Laplacian matrix and its spectral characteristics.
All these studies have demonstrated the importance of graph theory for the development of robotics systems.
•	WP4 (Safety Critical Motion Planning in Multi-Robot Systems)
Multi-Robot Motion Planning (MRMP) extends the concept of single-robot motion planning to a set of robots, each of which must find a collision-free path from a start to a goal position in a shared environment.
These roadmaps can be queried using graph search algorithms, such as Dijkstra’s or A*, to find paths from start to goal.
To ensure safe navigation from the start to the target configuration, it is essential to compute a collision-free path through an environment with obstacles. The path planning problem in a multi-robot system is challenging, because finding the best collision-free paths are affected by dynamically changing environments due to the robots' movement. 
Motion planning is a common problem in the development of intelligent control of autonomous robotics, which has been addressed in many types of research [Bullo2016]. It also has importance and great value not just in robotics but also in various fields such as maintenance planning, computer-aided design, and virtual environments. Motion planning comprises sensor-based planning, configuration spaces, decomposition and sampling methods, matrices computation and their properties, and advanced planning algorithms. 
Multi-robot motion planning methods are broadly classified as coupled, decoupled, or hybrid. Coupled methods explore the full composite space to ensure high coordination and collision-free paths but are limited by scalability (see RRT method in [Lavalle1998]). Decoupled approaches plan individually for each robot and resolve conflicts post hoc using strategies like prioritized planning [Cui2012]. Hybrid methods combine both, leveraging MAPF techniques, addresses path conflicts either by expanding the search space (e.g., M* [Wagner2015]) or by imposing constraints on individual robot paths (e.g., [Solis2021]) to ensure collision-free planning.
The main function of motion planning is to produce a continuous path that links a start location (S) to a goal location (G) where the robot movement is free from collisions with surrounding obstacles and with each other [Hvězda2017]. In addition, it is an ability to build collision-free paths that connect robots to their target destinations.
The motion planning problem of a multi-robot system can also be classified into two categories: centralised and decentralised, where in the first category a multi-robot system is considered as a single robot system instead of several autonomous entities.
Reliable communication in distributed multi-agent robotic systems is challenging, involving two main types: implicit communication, where agents sense each other using onboard sensors, and explicit communication, which involves direct data exchange via communication modules[Viksnin2019]. Both approaches face issues related to hardware constraints, network design, and security.
The paper [Wang2016] introduces a multi-robot manipulation algorithm that enables a large team of small robots to move a heavy object along a desired path without requiring any explicit communication network, relying instead on object motion sensing for coordination.
The centralised motion planning often addresses coordination via setting the robot speeds along their respective paths, where the path of each robot is calculated independently, and it uses the sampling algorithms to coordinate previously built paths. The decentralised category is considered more common than the centralised one [Cai2007].
Path planning problem, as a case of motion planning problems, is one of the critical problems in robotics, which has been under extensive study until nowadays. It is an important problem that covers a wide area of robotics research. Path planning plays a main role in enhancing robotic navigation systems in both dynamic and static environments. In the path planning, the objective is to calculate a collision-free path for a robot to move from a start location to a goal location meanwhile avoid collision with obstacles without human intervention [Hvězda2017]. The static environment consists of only static obstacles in the domain of the workspace, whereas the dynamic environment contains both dynamic and static obstacles in the workspace domain [Omar2013]. Path planning in multi-robot systems has been often tackled as an optimization problem focused on finding the shortest collision-free path [Khaluf2017]. 
The motivation in the motion planning problem is to design the robot path of the mobile robots considering obstacle avoidance [Solis2021].
The paper [Motes2019] proposes Interaction Templates (ITs), a motion planning approach that models robot interactions using reusable roadmaps, improving efficiency over traditional task-motion planning in cooperative multi-robot scenarios.
The paper introduces a scalable multi-robot planning method using solution databases for small subproblems, improving efficiency in complex tasks with mobile and manipulator robots.
The problem of the path planning can be classified into two classes, depending on the range of knowledge of robots for all information around the surrounding environment. Class one is local path planning, and the second class is global path planning [Omar2013]. A local path planning requires the robot to move in both static and dynamic environments. This type is employed to sense obstacles in the environment via sensors measurements, avoid them in a real-time environment, and then define a collision-free path. In contrast, a global path planning needs total knowledge of the environment and, so a collision-free optimal path is created within the environment to move robots from initial location to goal location before the robots start moving [Kostavelis2012, Omar2013]. In robotics, different path planning approaches are introduced, rely on the environment, type of sensor and robot abilities, while the abjective could be one of the: distance, cost, time, and complexity.  
Among the popular known and most used algorithms for path planning problem are Dijkstra’s and A* algorithms, and many variants and expansions have been proposed for these algorithms [Khaluf2017]. These algorithms depend on the environment where the map represents a graph and then finds a path in that graph and these algorithms just consider a subset of vertices.

•	WP5 (Multi-Sensor Visual Perception Adaptive Control Integration)
The ability of agents to perceive and interpret their environment is crucial for effective interaction. Among various sensory inputs, camera inputs play a pivotal role, providing rich visual information that can be critical for object recognition and coordination among agents.
•	WP6 (Vision-Integrated Fault Diagnosis & FTC Coordination)
Multi-Agent Robotic System (MARS) is characterized by its fault-tolerant strategies, where, if an agent of the system crashes, another can occupy its place.
The main reason for the growing interest in multi-robot systems, is their ability to withstand system failures by creating redundant processes and expanding responsibilities (if one of the robots fails, the others step in). Thus, the system provides a decreased failure rate.
designing control software as one of the main challenges in MRSs has been thoroughly investigated, with many successful approaches proposed in recent years.
The process of integrating visual data into control law is to extract geometric features or pose estimates from images, which are then fed into the control loop has recently considered significant attention by researchers [p5]. 
several recent works train networks to predict camera–scene relative pose from monocular images, effectively replacing manual feature tracking[]. Deep learning thus provides robust, high-level visual feedback for control. Adaptive neural controllers (e.g., using reinforcement learning or adaptive networks) can adjust control gains or policies online to compensate for visual noise and changing environments. Object detectors like YOLO (You Only Look Once) are often employed to identify obstacles or targets in real-time, with their output guiding motion decisions. In summary, AI-enhanced visual servoing now leverages learned visual features and end-to-end networks to improve perception and navigation under uncertainty []. 
•	WP3 (Distributed Fault Diagnosis in Swarm Robotic Systems)
A robotic system is prone to actuator and sensor faults in real-world deployments; 
Current communication architectures often do not match requirements for swarm communication, which often leads to a system with a centralized communication infrastructure. In  [p9], the authors show that many applications of swarm robotics cannot fully exploit the advantages offered by distributed swarm architectures due to systems with only few agents or central control.  
 A fault in swarm robots can be stemmed from either: the accumulation of debris on a motor that prevents it from turning, [add more items], and so on.
Fault detection in robotic systems can be exogenous—robots identifying faults in others [p7]—or endogenous, where a robot detects faults within itself [p8].
 
Fault detection in SRSs has been studied via distributed, observer-based schemes. Recent research highlights that even partial sensor/actuator degradation – not just total failure – can disrupt swarms and make significantly degrade of SRSs overall performance [p4,p101], concluding that an active approach to fault tolerance is necessary if SRS are to retain long-term autonomy. Accordingly, predictive fault-diagnosis approaches are gaining attention. Contemporary methods use distributed observers or classifiers: each robot runs an (often sliding-mode or Luenberger) observer to estimate expected behavior and generate residuals, flagging deviations as faults. Other approaches employ machine learning, where each agent applies lightweight classifiers to local data to detect anomalies [p2]  
Event-triggered updates have been proposed to reduce the communication/computation load while still catching faults early [p13]. 
In conclusion, the state of the art combines model-based observers with data-driven adaptation to achieve fast, reliable fault detection in multi-robot teams.
•	WP4 (Fault-Tolerant Control Coordination)
Many implementations overlook the fundamental concept of swarm robotics, which is distributed decision-making that enables self-organized behavior. Despite each robot’s ability to sense its environment, collect local data, and communicate with peers, control is often handled in a centralized manner [p9]. Some industrial example projects which are still rely on centralized control:  in the agriculture and warehouse applications [p10] or the entertainment applications [p11]. 
Once a robot is detected as faulty, action must be taken to resolve the fault or otherwise prevent further detriment to system performance. Once a robot is identified as faulty, appropriate measures must be taken to either resolve the issue or prevent it from further degrading overall system performance. These measures may include autonomous self-repair or inter-robot repair in the field [sss], deactivating and abandoning the faulty unit [8], isolating it to prevent interference [10], or neutralizing its disruptive potential through coordinated swarm-level mitigation strategies [11].
Fault-tolerant coordination in swarms typically relies on redundant connectivity and adaptive control reconfiguration. Among various strategy taken for FTC in SRSs, Graph-theoretic methods ensure that even if some robots fail or drop out, the remaining network stays sufficiently connected. In the literature, connectivity-maintaining controllers – based on control barrier functions, is given in [p102] to preserve network links and consensus despite disturbances. For example, in [p102], CBF controller provides F-resilience to adversaries, while still satisfying other constraints.
In [p3], by considering incipient faults, an active fault-tolerant control scheme is developed to achieve long-term autonomy
In [p6], the author presents a novel fault recovery method for robot swarms, using Reinforcement Learning and Self-Organising Maps to select optimal strategies across centralized and distributed settings.

•	WP5 (Safety Critical Motion Planning in Multi-Robot Systems)
Ensuring safety in swarms is increasingly addressed with Control Barrier Functions (CBFs). CBFs provide formal guarantees (e.g. collision avoidance or staying within safe sets) while allowing the swarm to pursue its tasks [p102]. Recent studies demonstrate how CBFs can enforce inter-robot collision-avoidance and other constraints in large teams. 
Collectively, these references show that each component of the proposed project – from hybrid modeling to vision-based control, fault diagnosis, distributed FTC, and CBF-based safety – is grounded in cutting-edge research [some references here]. The project’s innovation lies in integrating these elements into a unified framework for swarm robotics, going beyond the current state of the art by combining them for vision-guided, fault-aware coordination.
In [p12], platooning strategy versa greedy strategy is investigated for robot platooning for navigating crowded environments.
In the literature, adaptive system-identification methods, which use neural or regression models, emerged as a successful strategy to estimate unknown modeling dynamics However, integrating first-principles physics with data-driven learning has emerged as a powerful modeling approach.
Data-driven learning of the uncertainty can lead to more effective tracking control policies with better adaptivity and less conservatism, e.g., [] [WP1]

Detecting and accommodating such faults before they propagate is therefore crucial.
In [p2] a data-driven based distributed scheme is developed in SRS that exploits machine learning classifiers to detect the occurrence of faults in a robot or its neighbor robots. 
Objectives and Novelty—
The project’s objective is an integrated framework for robust navigation and coordination of vision-guided MRSs in uncertain, dynamic environments enabling collaborative and industrial MRSs to perceive, predict, and explain their actions while ensuring safety, obstacle avoindance, and fault tolerance and under perception uncertainty. It will fuse real-time physics-based modeling, adaptive learning, distributed fault diagnosis, and FTC with scalable multi-agent control. In particular, the novelty and objectives of the project are reflected in the following key scientific work packages:





•	WP1 (Hybrid Dynamics Modeling): 
This work package focuses on developing hybrid modeling techniques that combine physics-based dynamic models with data-driven neural approximators to describe the behavior of each robot in the team. Leveraging the underlying structure of Lagrangian dynamics, the physical model will capture core system properties such as inertia, Coriolis, and gravitational forces. However, since real-world robotic systems are often subject to unmodeled dynamics—such as friction, payload changes, or sensor drift—an adaptive learning mechanism will be employed to approximate these uncertainties online. Additionally, visual perception will be integrated into the modeling process to improve pose estimation and support more accurate system identification. This hybrid modeling approach will serve as the foundation for robust control and diagnosis in the subsequent work packages.
•	WP2 (Visual Perception Integration with Adaptive Distributed Neural Control): 
This work package aims to design a distributed control framework that integrates visual perception directly into the control loop of each robot. By extracting high-level visual features using convolutional neural networks (e.g., YOLO or pose estimation models), the robots will enhance their situational awareness and perform vision-guided navigation. An adaptive neural control scheme will be developed for each agent, enabling real-time adjustment of control parameters to cope with noisy perception and dynamic environmental conditions. The control architecture will remain decentralized to respect the distributed nature of multi-robot systems, but will allow limited communication to support coordination when necessary. This WP bridges low-level control and high-level perception in an adaptive, resilient manner.
•	WP3 (Distributed Fault Diagnosis in Multi-Robot Systems)
The objective is to detect, isolate, and estimate of actuator and sensor faults in real-time. A distributed observer-based approach will be used, where each robot employs local estimators—such as Luenberger or sliding-mode observers—to monitor its own health and detect anomalies. Upon large residuals, fault flags are raised. Employ neural network-based schemes to process time-series residual for accurate fault type identification. To reduce communication overhead, an event-triggered diagnostic strategy will be employed, activating data sharing or re-evaluation only when significant deviations or residuals are observed. This WP ensures each robot can autonomously assess its health and contribute to the system’s collective resilience.
•	WP4 (Fault-Tolerant Control Coordination and Control Reconfiguration)
This work package develops a distributed fault-tolerant control (FTC) strategy that ensures mission continuity and safety, even when individual robots experience faults. Building on the fault information from WP3, the control system will reconfigure in real time—modifying the roles, trajectories, or influence weights of affected agents. Graph-theoretic techniques will be applied to preserve network connectivity and coordinated behavior, such as formation control, task allocation, or consensus. The FTC scheme will be fully distributed, avoiding reliance on a central controller, and capable of dynamically adapting to degraded agents. This layer ensures robust performance at the team level under uncertain and faulty conditions.
•	WP5 (Safety Critical Motion Planning)
The final work package focuses on embedding formal safety mechanisms into the control architecture of each robot. Control Barrier Functions (CBFs) will be designed and implemented to guarantee safety-critical constraints such as inter-robot collision avoidance, workspace boundary enforcement, and emergency stop activation. By integrating CBFs with the fault-aware control strategies from WP4, this work package ensures that both healthy and faulty robots operate within provably safe regions, even in dynamic or partially degraded scenarios.




References
[wp1_01] Djeumou, F., Neary, C., Goubault, E., Putot, S. and Topcu, U., 2022, May. Neural networks with physics-informed architectures and constraints for dynamical systems modeling. In Learning for Dynamics and Control Conference (pp. 263-277). PMLR.
[p1] Kegeleirs, M. and Birattari, M., 2025. Towards applied swarm robotics: current limitations and enablers. Frontiers in Robotics and AI, 12, p.1607978.
[p2] Carminati, A., Azzalini, D., Vantini, S. and Amigoni, F., 2024, May. A distributed approach for fault detection in swarms of robots. In Proceedings of the 23rd international conference on autonomous agents and multiagent systems (pp. 253-261).
[p3] O'Keeffe, J., 2025. Anticipating Degradation: A Predictive Approach to Fault Tolerance in Robot Swarms. arXiv preprint arXiv:2504.01594.
[p4] A. F. T. Winfield and J. Nembrini, “Safety in numbers: fault-tolerance in robot swarms,” International Journal of Modelling, Identification and Control, vol. 1, pp. 30–37, 2006.
[p5] Paolillo, A., Nava, M., Piga, D. and Giusti, A., 2022, October. Visual servoing with geometrically interpretable neural perception. In 2022 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) (pp. 5300-5306). IEEE.
[p6] O. O. Oladiran, Fault Recovery in Swarm Robotics Systems using Learning Algorithms. PhD thesis, University of York, 2019.
[p7] Miller, O.G. and Gandhi, V., 2021. A survey of modern exogenous fault detection and diagnosis methods for swarm robotics. Journal of King Saud University-Engineering Sciences, 33(1), pp.43-53.
[p8] A. L. Christensen, Fault detection in autonomous robots," Ph.D. dissertation, Universite libre de Bruxelles, 2008.
[p9] Schranz, M., Umlauft, M., Sende, M. and Elmenreich, W., 2020. Swarm robotic behaviors and current applications. Frontiers in Robotics and AI, 7, p.36.
[p10] Telegraph, T. (2018). The Science Behind the Swarm of Robots Picking Your Grocery Order. Available online at: https://www.telegraph.co.uk/technology/2018/06/04/science-behind-swarm-robots-picking-grocery-order/ (accessed August 2, 2018).
[p11] Barrett, B. (2018). Intel Lights Up the Night with 500 ‘Shooting Star’ Drones. Available online at: https://www.wired.com/story/more-inclusive-fourth-ofjuly-drone-show/ (accessed August 2, 2019).
[p12] Argote-Gerald, J., Miyauchi, G., Trodden, P. and Gross, R., 2024. On the Benefits of Robot Platooning for Navigating Crowded Environments. arXiv preprint arXiv:2410.14406.
[p13] Tasooji, T.K. and Parasuraman, R., 2025. Distributed Fault-Tolerant Multi-Robot Cooperative Localization in Adversarial Environments. arXiv preprint arXiv:2507.06750.
[WP1_04] Grover, J.S., 2023. System identification and control of multiagent systems through interactions (Doctoral dissertation, Carnegie Mellon University).
[Stare2012] Stare, O. (2012). Centralized multi-robot system. The Department of Software Engineering. Faculty of Mathematics and Physics. Charles University in Prague.Ph.D. Thesis.
[Alwafi2022] ALWAFI, Fatma Ali Saad, Social Graphs and Their Applications to Robotics, Sheffield Hallam University Research Archive, Ph.D. Thesis, 2022.
[Verma2021] Verma, J. K., & Ranga, V. (2021). Multi-Robot Coordination Analysis, Taxonomy,
Challenges and Future Scope. Journal of Intelligent & Robotic Systems, 102(1), 1-36.
[Yan2013] Yan, Z., Jouandeau, N., & Cherif, A. A. (2013). A survey and analysis of multi-robot
coordination. International Journal of Advanced Robotic Systems, 10
[Kanjanawanishkul2010] Kanjanawanishkul, K. (2010). Coordinated path following control and formation
control of mobile robots. Phd, Eberhard-Karls-Universität Tübingen,
[Hvězda2017] Hvězda, B. J. (2017). Comparison of path planning methods for a multi-robot
team. 
[Bullo2016] Bullo, F., & Smith, S. L. (2016). Lectures on robotic planning and kinematics.version
v0.91(e).
[Cai2007] Cai, C., Yang, C., Zhu, Q., & Liang, Y. (2007, August). Collision avoidance in multi-robot systems. In 2007 International Conference on Mechatronics and Automation (pp. 2795-2800). IEEE.
[Falconi2015] Falconi, R., Sabattini, L., Secchi, C., Fantuzzi, C., & Melchiorri, C. (2015). Edgeweighted
consensus-based formation control strategy with collision avoidance.
Robotica, 33(2), 332-347.
[Rashid2013] Rashid, A. T., Ali, A. A., Frasca, M., & Fortuna, L. (2013). Path planning and obstacle avoidance based on shortest distance algorithm. Robotics and Autonomous Systems, 61(12), 1440-1449.
[Yasuda2011] Toshiyuki Yasuda. Multi-Robot Systems, Trends, and Development
[Zavlanos2007] Zavlanos, M. M., & Pappas, G. J. (2007). Potential fields for maintaining
connectivity of mobile networks. IEEE Transactions on robotics, 23(4), 812-816.
[Fax2004] Fax, J. A., & Murray, R. M. (2004). Information flow and cooperative control of vehicle formations. Automatic Control, IEEE Transactions on, 49(9), 1465-1476.
[Smith2009] Smith, Brian Stephen. (2009). "Automatic coordination and deployment of multi-robot systems." PhD diss., Georgia Institute of Technology.
[Omar2013] Omar, N. (2013). Path Planning Algorithm for a Car-like Robot Based on Cell Decomposition Method (Doctoral dissertation, Universiti Tun Hussein Onn Malaysia).
[Khaluf2017] Khaluf, Y., Markarian, C., Simoens, P., & Reina, A. (2017, June). Scheduling access to shared space in multi-robot systems. In International Conference on Practical Applications of Agents and Multi-Agent Systems (pp. 144-156). Springer, Cham.
[Kostavelis2012] Kostavelis, I., Nalpantidis, L., & Gasteratos, A. (2012). Collision risk assessment for autonomous robots by offline traversability learning. Robotics and Autonomous Systems, 60(11), 1367-1376.
[Solis2021] Solis, I., Motes, J., Sandström, R., & Amato, N. M. (2021). Representation optimal multi-robot motion planning using conflict-based search. IEEE Robotics and Automation Letters, 6(3), 4608-4615. LaValle, 
[Lin2004] Z. Lin, M. Broucke, and B. Francis, “Local control strategies for groups of mobile
autonomous agents,” IEEE Transactions on Automatic Control, vol. 49, pp. 622–629,
Apr. 2004.
[Reynolds1987] C. W. Reynolds, “Flocks, herds, and schools: A distributed behavioral model,” Computer Graphics, vol. 21, pp. 25–34, July 1987. 
[Tan2021] X. Tan and D. V. Dimarogonas, “Distributed implementation of control barrier functions for multi-agent systems,” IEEE Control Systems Letters, vol. 6, pp. 1879–1884, 2021.
[Ahmadi2019] M. Ahmadi, A. Singletary, J. W. Burdick, and A. D. Ames, “Safe policy synthesis in multi-agent pomdps via discrete-time barrier functions,” in IEEE Conference on Decision and Control (CDC), 2019.
[Dawson2023] C. Dawson, S. Gao, and C. Fan, “Safe control with learned certificates: A survey of neural lyapunov, barrier, and contraction methods for robotics and control,” IEEE Transactions on Robotics, vol. 39, no. 3, pp. 1749–1767, 2023.
[Latombe1991] Latombe, J. C. (1991). Robot Motion Planning, Kluwer Academic Publishers, ISBN 978-0792392064, London.

[Bennewitz2001] Bennewitz M.; Burgard, W. & Thrun, S. (2001). Optimizing schedules for prioritized path planning of multi-robot systems, Proceeding of the IEEE International Conference on Robotics and Automation (ICRA), pp. 271-276, ISBN 0-7803-6576-3, Seoul, Korea, May 2001, IEEE, New Jersey.
[Lerman2006] Lerman, K., Jones, C., Galstyan, A. &Mataric,M. J. (2006). Analysis of dynamic task allocation in multi-robot systems, International Journal of Robotics Research 3(25): 225–242.
[Shell2005] Shell, D. A., Jones, C. V. & Mataric, M. J. (2005). Ergodic dynamics by design: A route to predictable multi-robot systems, Multi-robot systems: From swarms to intelligent automata, pp. 291–297.
[Munoz2011] Munoz-Meléndez, A., 2011. On the Problem of Representing and Characterizing the Dynamics of Multi-Robot Systems. In Multi-Robot Systems, Trends and Development. IntechOpen.
[Balch2000] Balch, T. (2000). Hierarchic social entropy: an information theoretic measure of robot group diversity, Autonomous Robots 8(3): 209–237.
[Jiménez2018] Jiménez, A.C., García-Díaz, V. and Bolaños, S., 2018. A decentralized framework for multi-agent robotic systems. Sensors, 18(2), p.417.
[Furno2015] Furno, L.; Nielsen, M.C.; Blanke, M. Centralised versus decentralised control reconfiguration for collaborating underwater robots. IFAC-PapersOnLine 2015, 28, 732–739. 
[Jadbabaie2003] A. Jadbabaie, J. Lin, and A. S. Morse, “Coordination of groups of mobile autonomous agents using nearest neighbor rules,” IEEE Transactions on Automatic Control, vol. 48, pp. 988–1001, June 2003.
[Lin2004] Z. Lin, M. Broucke, and B. Francis, “Local control strategies for groups of mobile autonomous agents,” IEEE Transactions on Automatic Control, vol. 49, pp. 622–629, Apr. 2004.
[Cortes2006] J. Cortes, S. Martinez, and F. Bullo, “Robust rendezvous for mobile autonomous agents via proximity graphs in arbitrary dimensions,” IEEE Transactions on Automatic Control, vol. 51, no. 8, pp. 1289–1298, 2006. 
[Lin2004] Z. Lin, M. Broucke, and B. Francis, “Local control strategies for groups of mobile autonomous agents,” IEEE Transactions on Automatic Control, vol. 49, pp. 622–629, Apr. 2004.
[Ji2007] M. Ji and M. B. Egerstedt, “Distributed coordination control of multi-agent system while preserving connectedness,” IEEE Transactions on Robotics, vol. 23, pp. 693–703, Aug. 2007.
[Motes2019] Motes, J., Sandström, R., Adams, W., Ogunyale, T., Thomas, S. and Amato, N.M., 2019. Interaction templates for multi-robot systems. IEEE Robotics and Automation Letters, 4(3), pp.2926-2933.
[Lavalle1998] S. M. Lavalle, “Rapidly-exploring random trees: A new tool for path planning,” Research Report 9811, 1998.
[Cui2012] R. Cui, B. Gao, and J. Guo, “Pareto-optimal coordination of multiple robots with safety guarantees,” Autonomous Robots, vol. 32, no. 3, pp. 189–205, 2012.
[Solis2021] I. Solis, J. Motes, R. Sandstrom, and N. M. Amato, “Representation optimal multi-robot motion planning using conflict-based search,” ICRA, vol. 6, pp. 4608–4615, 2021.
[Wagner2015] G. Wagner and H. Choset, “Subdimensional expansion for multirobot path planning,” Artificial Intelligence, vol. 219, pp. 1–24, 2015.
[Wang2016] Wang, Z. and Schwager, M., 2016, January. Multi-robot manipulation without communication. In Distributed autonomous robotic systems: The 12th international symposium (pp. 135-149). Tokyo: Springer Japan.
[Jimenez2018] A. Jimenez, V. Garc´ıa D´ıaz, and S. Bola¯nos, “A decentralized framework for multi-agent robotic systems,” Sensors, vol. 18, p. 417, 02 2018.
[Soumya2020] S. Soumya and K. R. Guruprasad, “Multi-agent system inspired distributed control of a serial-link robot,” Journal of Automation MobileRobotics and Intelligent Systems, vol. Vol. 14, No. 1, p. 29–38, 2020.
[Viksnin2019] I. Viksnin, S. Chuprov, M. Usova, and D. Zakoldaev, “Police office model for multi-agent robotic systems,” IOP Conf. Series: Materials Science and Engineering, vol. 497, p. 012036, apr 2019.
[Zengyi2020] Zengyi Qin et al. “Learning Safe Multi-agent Control with Decentralized Neural Barrier Certificates”. In: International Conference on Learning Representations. 2020.
[rrr]
